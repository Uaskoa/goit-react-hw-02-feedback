{"version":3,"sources":["components/Statistics.jsx","components/FeedbackOptions.jsx","components/Section.jsx","components/Notification.jsx","App.js","index.js"],"names":["Statistics","good","neutral","bad","total","positivePercentage","FeedbackOptions","options","onLeaveFeedback","map","option","className","type","onClick","Section","title","children","Notification","message","App","state","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","handleFeedback","setState","prevState","Object","keys","this","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4QAsBeA,EApBI,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAKC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,mBAA9B,OACjB,gCACE,uCAAUJ,EAAV,OAEA,0CAAaC,EAAb,OACA,sCAASC,KACT,wCAAWC,EAAX,OACA,oDAAuBC,EAAvB,YCYWC,G,MAlBS,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,gBAAZ,OACtB,8BACGD,EAAQE,KAAI,SAACC,GAAD,OACX,wBAAQC,UAAU,SAASC,KAAK,SAAsBC,QAAS,kBAAKL,EAAgBE,IAApF,SACGA,GAD2CA,UCYrCI,EAfC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACd,sBAAKL,UAAU,UAAf,UACE,6BAAKI,IACJC,MCIUC,EARM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OAAiB,4BAAIA,KCiE3BC,G,kNA/CbC,MAAQ,CACNnB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPkB,mBAAqB,WACnB,OAAO,EAAKD,MAAMnB,KAAO,EAAKmB,MAAMlB,QAAU,EAAKkB,MAAMjB,K,EAG3DmB,gCAAkC,WAChC,OAAOC,KAAKC,MAAyB,IAAlB,EAAKJ,MAAMnB,KAAc,EAAKoB,uB,EAGnDI,eAAiB,SAAAf,GAEf,EAAKgB,UAAS,SAAAC,GAAS,sBAAQjB,EAASiB,EAAUjB,GAAU,O,4CAG9D,WACE,OACE,sBAAKC,UAAU,YAAf,UACE,cAAC,EAAD,CAASI,MAAM,wBAAf,SACE,cAAC,EAAD,CACER,QAASqB,OAAOC,KAAKC,KAAKV,OAC1BZ,gBAAiBsB,KAAKL,mBAIzBK,KAAKT,qBACJ,cAAC,EAAD,CAAUN,MAAM,aAAhB,SACE,cAAC,EAAD,CACEd,KAAM6B,KAAKV,MAAMnB,KACjBC,QAAS4B,KAAKV,MAAMlB,QACpBC,IAAK2B,KAAKV,MAAMjB,IAChBC,MAAO0B,KAAKT,qBACZhB,mBAAoByB,KAAKR,sCAI7B,cAAC,EAAD,CAAcJ,QAAQ,6B,GAzCda,c,MCdlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.280acbd8.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => (\r\n  <div>\r\n    <p>Good: {good} </p>\r\n\r\n    <p>Neutral: {neutral} </p>\r\n    <p>Bad: {bad}</p>\r\n    <p>Total: {total} </p>\r\n    <p>Positive feedback: {positivePercentage}% </p>\r\n  </div>\r\n);\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number,\r\n};\r\n\r\n\r\nexport default Statistics;\r\n","import './FeedbackOptions.scss';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => (\r\n  <div>\r\n    {options.map((option) => (\r\n      <button className='button' type=\"button\" key={option} onClick={() =>onLeaveFeedback(option)}>\r\n        {option}\r\n      </button>\r\n    ))}\r\n  </div>\r\n);\r\n\r\n\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n}\r\n\r\n\r\nexport default FeedbackOptions;","\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Section = ({ title, children }) => (\r\n  <div className=\"section\">\r\n    <h2>{title}</h2>\r\n    {children}\r\n  </div>\r\n);\r\n\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n  children: PropTypes.node,\r\n};\r\n\r\n\r\n\r\nexport default Section;","import PropTypes from 'prop-types';\r\n\r\nconst Notification = ({ message }) => <p>{message}</p>;\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n  \r\n}\r\n\r\n\r\nexport default Notification;\r\n","// import FeedbackCounter from './components/FeedbackCounter'\n\n// function App() {\n//   return (\n//     <div>\n//       <FeedbackCounter initialValue={{ good: 0, neutral: 0, bad: 0 }} />\n//     </div>\n//   );\n// }\n\n// export default App;\n\nimport { Component } from 'react';\nimport Statistics from './components/Statistics';\nimport FeedbackOptions from './components/FeedbackOptions';\nimport Section from './components/Section';\nimport Notification from './components/Notification';\nimport './App.scss'\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  countTotalFeedback = () => {\n    return this.state.good + this.state.neutral + this.state.bad;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    return Math.round((this.state.good * 100) / this.countTotalFeedback());\n  };\n\n  handleFeedback = option => {\n    \n    this.setState(prevState => ({ [option]: prevState[option] + 1 }));\n  };\n\n  render() {\n    return (\n      <div className='container'>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={Object.keys(this.state)}\n            onLeaveFeedback={this.handleFeedback}\n          />\n        </Section>\n\n        {this.countTotalFeedback() ? (\n          <Section  title=\"Statistics\">\n            <Statistics\n              good={this.state.good}\n              neutral={this.state.neutral}\n              bad={this.state.bad}\n              total={this.countTotalFeedback()}\n              positivePercentage={this.countPositiveFeedbackPercentage()}\n            />\n          </Section>\n        ) : (\n          <Notification message=\"No feedback given\"></Notification>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport \"modern-normalize/modern-normalize.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}